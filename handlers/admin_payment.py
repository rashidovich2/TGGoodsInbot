# - *- coding: utf- 8 - *-
import asyncio

from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton as ikb

import json
from tgbot.keyboards.inline_admin import payment_choice_finl
from tgbot.loader import dp
from tgbot.services.api_qiwi import QiwiAPI
from tgbot.services.api_yoo import YooAPI
from tgbot.services.api_cb import CoinbaseAPI
from tgbot.services.api_sqlite import update_paymentx, get_paymentx, get_upaycount, get_upaymentx, update_upaymentx, get_userx, get_admin_crypto_address, update_admin_crypto_address, create_admin_crypto_payment_row
from tgbot.utils.misc.bot_filters import IsAdmin, IsAdminorShopAdmin
from tgbot.utils.misc_functions import validate_trx_address, validate_bsc_address
from babel import Locale
from tgbot.data.config import get_admins, BOT_DESCRIPTION, I18N_DOMAIN, LOCALES_DIR
from tgbot.middlewares.i18n import I18nMiddleware

i18n = I18nMiddleware(I18N_DOMAIN, LOCALES_DIR)

print(i18n)
_ = i18n.gettext

###################################################################################
############################# –í–´–ë–û–† –°–ü–û–°–û–ë–ê –ü–û–ü–û–õ–ù–ï–ù–ò–Ø ############################
# –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@dp.message_handler(IsAdminorShopAdmin(), text=["üñ≤ –°–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è", "üñ≤ Payment Methods"], state="*")
async def payment_systems(message: Message, state: FSMContext):
    await state.finish()
    print("PAYMENT METHODS")
    user_id = message.from_user.id
    lang = get_userx(user_id=user_id)['user_lang']
    user_role = get_userx(user_id=user_id)['user_role']
    print(user_role, lang)
    if user_role in ['Admin', 'ShopAdmin']:
        await message.answer(_("<b>üñ≤ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</b>", locale=lang), reply_markup=payment_choice_finl(user_id, lang))


# –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Å–∞–º–∏—Ö —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@dp.callback_query_handler(IsAdminorShopAdmin(), text_startswith="change_payment:")
async def payment_systems_edit(call: CallbackQuery):
    way_pay = call.data.split(":")[1]
    way_status = call.data.split(":")[2]
    #user_id = str(json.dumps(call.data.split(":")[3]))
    user_id = call.data.split(":")[3]
    #user_id = user_id.strip("\"")
    print(way_pay, way_status, user_id)
    #print(call.from_user.id)

    get_payment = get_upaymentx(user_id)
    #count = get_upaycount(user_id)
    if len(get_payment) == 0:
        cur = create_upayments_row(user_id)
    print(user_id, way_pay, way_status)

    if way_pay == "BTCB":
        way_payx = "way_btcb"
    elif way_pay == "TRX":
        way_payx = "way_tron"

    elif way_pay == "USDT":
        way_payx = "way_usdt"
    if way_pay is not None:
        way_payz = f"{way_payx} = {way_status}"
        update_upaymentx(user_id, way_payz)

    '''if get_payment['qiwi_login'] != "None" and get_payment['qiwi_token'] != "None" or way_status == "False":
        if way_pay == "Form":
            if get_payment['qiwi_secret'] != "None" or way_status == "False":
                update_upaymentx(user_id, way_form=way_status)
            else:
                await call.answer(
                    "‚ùó –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ò–∑–º–µ–Ω–∏—Ç–µ –∫–∏–≤–∏ –∏ –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –ø–æ –§–æ—Ä–º–µ",
                    True)
        elif way_pay == "ForYm":
            if get_payment['yoo_client_id'] != "None" or way_status == "False":
                update_upaymentx(user_id, way_formy=way_status)
            else:
                await call.answer(
                    "‚ùó –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ò–∑–º–µ–Ω–∏—Ç–µ –∫–∏–≤–∏ –∏ –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –ø–æ –§–æ—Ä–º–µ",
                    True)
        elif way_pay == "Number":
            update_upaymentx(user_id, way_number=way_status)
        elif way_pay == "Nickname":
            status, response = await (await QiwiAPI(call)).get_nickname()
            if status:
                update_upaymentx(user_id, way_nickname=way_status, qiwi_nickname=response)
            else:
                await call.answer(response, True)
        elif way_pay == "FreeCredi":
            update_upaymentx(user_id, way_freecredi=way_status)
        elif way_pay == "CoinBase":
            update_upaymentx(user_id, way_coinbase=way_status)
    else:
        await call.answer("‚ùó –î–æ–±–∞–≤—å—Ç–µ –∫–∏–≤–∏ –∫–æ—à–µ–ª—ë–∫ –ø–µ—Ä–µ–¥ –≤–∫–ª—é—á–µ–Ω–∏–µ–º –°–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π.", True)'''

    try:
        await call.message.edit_text(_("<b>üñ≤ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</b>", locale=lang), reply_markup=payment_choice_finl(user_id, lang))
    except Exception:
        pass


###################################################################################
####################################### QIWI ######################################
# –ò–∑–º–µ–Ω–µ–Ω–∏–µ QIWI –∫–æ—à–µ–ª—å–∫–∞
@dp.message_handler(IsAdminorShopAdmin(), text="ü•ù –ò–∑–º–µ–Ω–∏—Ç—å QIWI üñç", state="*")
async def payment_qiwi_edit(message: Message, state: FSMContext):
    await state.finish()

    await state.set_state("here_qiwi_login")
    await message.answer("<b>ü•ù –í–≤–µ–¥–∏—Ç–µ <code>–Ω–æ–º–µ—Ä (—á–µ—Ä–µ–∑ +7, +380)</code> QIWI –∫–æ—à–µ–ª—å–∫–∞ üñç</b>")


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ ‚ÇÆ Tether, USDT(Trc-20) –∫–æ—à–µ–ª—å–∫–∞
@dp.message_handler(IsAdminorShopAdmin(), text=["‚ÇÆ Tether –∞–¥—Ä–µ—Å", "TRX, Tron(Trc20) –∞–¥—Ä–µ—Å", "‚Çø, Bitcoin(Bep-20) –∞–¥—Ä–µ—Å", "–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã"], state="*")
async def payment_qiwi_edit(message: Message, state: FSMContext):
    await state.finish()
    await state.set_state("here_admin_address")
    if message.text ==  "‚ÇÆ Tether –∞–¥—Ä–µ—Å":
        await state.update_data(here_type_net="USDT")
        await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ <code>‚ÇÆ Tether, USDT(Trc-20)</code> –∞–¥—Ä–µ—Å</b>")
    if message.text ==  "TRX, Tron(Trc20) –∞–¥—Ä–µ—Å":
        await state.update_data(here_type_net="TRX")
        await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ <code>TRX(Trc-20)</code> –∞–¥—Ä–µ—Å</b>")
    if message.text ==  "‚Çø, Bitcoin(Bep-20) –∞–¥—Ä–µ—Å":
        await state.update_data(here_type_net="BTCB")
        await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ <code>‚Çø, Bitcoin(Bep-20)</code> –∞–¥—Ä–µ—Å</b>")
    if message.text ==  "–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã":
        await state.update_data(here_type_net="RUB")
        await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ <code>–Ω–æ–º–µ—Ä</code> –∫–∞—Ä—Ç—ã</b>")


# –ü—Ä–∏–Ω—è—Ç–∏–µ –¢—Ä–æ–Ω –∞–¥—Ä–µ—Å–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ç
@dp.message_handler(IsAdminorShopAdmin(), state="here_admin_address")
async def enter_tron_address(message: Message, state: FSMContext):
    user_id = message.from_user.id
    type_net = (await state.get_data())['here_type_net']
    print(type_net)
    save = 0
    admin_address = ""

    if message.text:
        admin_address = message.text
        if admin_address == "" or admin_address is None:
            await message.answer(
                "<b>‚ôª –ë—ã–ª –≤–≤–µ–¥–µ–Ω –ø—É—Å—Ç–æ–π –∞–¥—Ä–µ—Å</b>",
                reply_markup=back_to_profile_finl('ru'),
            )

        admin_addressdb = get_admin_crypto_address(type_net)
        print(admin_addressdb)
        #trx_addressdb = get_crypto_address(user_id, type_net)
        if type_net in ["TRX", "USDT"]:
            trx_address = await validate_trx_address(admin_address)
            print(trx_address)

            #await message.answer(f"<b>‚ôª –ü—Ä–æ–≤–µ—Ä—è–µ–º –í–∞—à –∞–¥—Ä–µ—Å.</b>")
            #–µ—Å—Ç—å –ª–∏ –∞–¥—Ä–µ—Å –≤ TRC20
            if trx_address['success']:
                await message.answer(f"<b>‚ôª –í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ. {admin_address} –Ω–∞–π–¥–µ–Ω –≤ TRC20.</b>")
                save = 1
            if trx_address is False:
                await message.answer(f"<b>‚ôª –ê–¥—Ä–µ—Å–∞: {admin_address} –Ω–µ—Ç –≤ —Å–µ—Ç–∏.</b>",
                                     reply_markup=back_to_profile_finl('ru'))
                save = 0

        if type_net == "BTCB":
            bsc_addressbep = await validate_bsc_address(admin_address)

            # –µ—Å—Ç—å –ª–∏ –∞–¥—Ä–µ—Å –≤ BEP-20
            if bsc_addressbep['message'] == 'OK':
                # –µ—Å–ª–∏ –∞–¥—Ä–µ—Å –µ—Å—Ç—å –≤ –Ω–∞—à–µ–π –ë–î
                await message.answer(f"<b>‚ôª –í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ. {admin_address} –Ω–∞–π–¥–µ–Ω –≤ BEP-20.</b>")
                save = 1
            if bsc_addressbep['message'] == 'NOTOK':
                await message.answer(f"<b>‚ôª –ê–¥—Ä–µ—Å–∞: {admin_address} –Ω–µ—Ç –≤ —Å–µ—Ç–∏.</b>", reply_markup=back_to_profile_finl('ru'))
                save = 0

        if type_net == "RUB":
            print(f"{admin_address} OK")
            save = 1

        if admin_addressdb and save == 1:
            update_admin_crypto_address(type_net, tron_address=admin_address)
            await message.answer(f"–û–±–Ω–æ–≤–ª—è–µ–º –∞–¥—Ä–µ—Å –≤ –ø—Ä–æ—Ñ–∏–ª–µ {type_net} –∞–¥–º–∏–Ω–∞.")
        elif admin_addressdb is None and save == 1:
            create_admin_crypto_payment_row(type_net, admin_address)
            await message.answer(f"–î–æ–±–∞–≤–ª—è–µ–º –∞–¥—Ä–µ—Å –≤ –ø—Ä–æ—Ñ–∏–ª–µ {type_net} –∞–¥–º–∏–Ω–∞.")

            #await state.update_data(here_admin_address=admin_address)
            #await state.set_state("here_pay_amount")

            await message.answer(f"<b>‚ôª –£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –í–∞—à {type_net} –∞–¥—Ä–µ—Å [{admin_address}] –≤ –ø—Ä–æ—Ñ–∏–ª–µ.</b>",
                                     reply_markup=back_to_profile_finl('ru'))






# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ QIWI
@dp.message_handler(IsAdminorShopAdmin(), text="ü•ù –ü—Ä–æ–≤–µ—Ä–∏—Ç—å QIWI ‚ôª", state="*")
async def payment_qiwi_check(message: Message, state: FSMContext):
    print("||| –ü—Ä–æ–≤–µ—Ä–∫–∞ –ö–ò–í–ò –∞–¥–º–∏–Ω–æ–º –ø–ª–æ—â–∞–¥–∫–∏. |||")
    await state.finish()
    user_id = message.from_user.id
    print(user_id)

    await (await QiwiAPI(message, check_pass=True)).pre_checker()


# –ë–∞–ª–∞–Ω—Å QIWI
@dp.message_handler(IsAdminorShopAdmin(), text="ü•ù –ë–∞–ª–∞–Ω—Å QIWI üëÅ", state="*")
async def payment_qiwi_balance(message: Message, state: FSMContext):
    await state.finish()
    user_id = message.from_user.id

    await (await QiwiAPI(message)).get_balance()

######################################## YooMoney ################################
# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ Yoo
@dp.message_handler(IsAdminorShopAdmin(), text="üí≥ –ò–∑–º–µ–Ω–∏—Ç—å Yoo üñç", state="*")
async def payment_qiwi_edit(message: Message, state: FSMContext):
    await state.finish()

    await state.set_state("here_yoo_acc_number")
    await message.answer("<b>üí≥ –í–≤–µ–¥–∏—Ç–µ <code>–Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞ </code> Yoo –∞–∫–∫–∞—É–Ω—Ç–∞ üñç</b>")


######################################## –ü–†–ò–ù–Ø–¢–ò–ï QIWI ########################################
# –ü—Ä–∏–Ω—è—Ç–∏–µ –ª–æ–≥–∏–Ω–∞ –¥–ª—è QIWI
@dp.message_handler(IsAdminorShopAdmin(), state="here_qiwi_login")
async def payment_qiwi_edit_login(message: Message, state: FSMContext):
    if message.text.startswith("+"):
        await state.update_data(here_qiwi_login=message.text)

        await state.set_state("here_qiwi_token")
        await message.answer(
            "<b>ü•ù –í–≤–µ–¥–∏—Ç–µ <code>—Ç–æ–∫–µ–Ω API</code> QIWI –∫–æ—à–µ–ª—å–∫–∞ üñç</b>\n"
            "‚ùï –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ —Ç—É—Ç üëâ <a href='https://qiwi.com/api'><b>–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è</b></a>\n"
            "‚ùï –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞, —Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –≥–∞–ª–æ—á–∫–∏.",
            disable_web_page_preview=True
        )
    else:
        await message.answer("<b>‚ùå –ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å + <code>(+7..., +380...)</code></b>\n"
                             "ü•ù –í–≤–µ–¥–∏—Ç–µ <code>–Ω–æ–º–µ—Ä (—á–µ—Ä–µ–∑ +7, +380)</code> QIWI –∫–æ—à–µ–ª—å–∫–∞ üñç")


# –ü—Ä–∏–Ω—è—Ç–∏–µ acc_number –¥–ª—è Yoo
@dp.message_handler(IsAdminorShopAdmin(), state="here_yoo_acc_number")
async def payment_qiwi_edit_login(message: Message, state: FSMContext):
    #if message.text.startswith("+"):
    await state.update_data(here_yoo_acc_number=message.text)
    user_id = message.from_user.id
    lang = get_userx(user_id=user_id)['user_lang']

    await state.set_state("here_yoo_token")
    if lang == "ru":
        await message.answer(
            "<b>ü•ù –í–≤–µ–¥–∏—Ç–µ <code>—Ç–æ–∫–µ–Ω API</code> Yoo –∫–æ—à–µ–ª—å–∫–∞ üñç</b>\n"
            "‚ùï –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ —Ç—É—Ç üëâ <a href='https://yoomoney.ru/docs/wallet'><b>–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è</b></a>\n"
            "‚ùï –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞, —Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –≥–∞–ª–æ—á–∫–∏.",
            disable_web_page_preview=True
        )
    if lang == "en":
        await message.answer(
            "<b>ü•ù Please, enter <code> API token </code> Yoo wallet üñç</b>\n"
            "‚ùï You can get it here üëâ <a href='https://yoomoney.ru/docs/wallet'><b>Click Me</b></a>\n"
            "‚ùï When receiving a token, put only the first 3 ticks",
            disable_web_page_preview=True
        )
    #else:
        #await message.answer("<b>‚ùå –ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å + <code>(+7..., +380...)</code></b>\n"
        #                     "ü•ù –í–≤–µ–¥–∏—Ç–µ <code>–Ω–æ–º–µ—Ä (—á–µ—Ä–µ–∑ +7, +380)</code> QIWI –∫–æ—à–µ–ª—å–∫–∞ üñç")


# –ü—Ä–∏–Ω—è—Ç–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è QIWI
@dp.message_handler(IsAdminorShopAdmin(), state="here_qiwi_token")
async def payment_qiwi_edit_token(message: Message, state: FSMContext):
    await state.update_data(here_qiwi_token=message.text)
    user_id = message.from_user.id
    lang = get_userx(user_id=user_id)['user_lang']

    await state.set_state("here_qiwi_secret")
    await message.answer(
        "<b>ü•ù –í–≤–µ–¥–∏—Ç–µ <code>–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á üñç</code></b>\n"
        "‚ùï –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ —Ç—É—Ç üëâ <a href='https://qiwi.com/p2p-admin/transfers/api'><b>–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è</b></a>\n"
        "‚ùï –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –ø–æ –§–æ—Ä–º–µ, –æ—Ç–ø—Ä–∞–≤–∏–≤: <code>0</code>",
        disable_web_page_preview=True
    )

# –ü—Ä–∏–Ω—è—Ç–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è Yoo
@dp.message_handler(IsAdminorShopAdmin(), state="here_yoo_token")
async def payment_qiwi_edit_token(message: Message, state: FSMContext):
    await state.update_data(here_yoo_token=message.text)
    user_id = message.from_user.id
    lang = get_userx(user_id=user_id)['user_lang']

    await state.set_state("here_yoo_client_id")
    if lang == "ru":
        await message.answer(
            "<b>ü•ù –í–≤–µ–¥–∏—Ç–µ <code>–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π ID üñç</code></b>\n"
            "‚ùï –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ —Ç—É—Ç üëâ <a href='https://yoomoney.ru/p2p-admin/transfers/api'><b>–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è</b></a>\n"
            "‚ùï –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –ø–æ –§–æ—Ä–º–µ, –æ—Ç–ø—Ä–∞–≤–∏–≤: <code>0</code>",
            disable_web_page_preview=True
        )
    if lang == "ru":
        await message.answer(
            "<b>ü•ù Plaese Enter <code>Client ID üñç</code></b>\n"
            "‚ùï You can enter this here üëâ <a href='https://yoomoney.ru/p2p-admin/transfers/api'><b>–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è</b></a>\n"
            "‚ùï –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –ø–æ –§–æ—Ä–º–µ, –æ—Ç–ø—Ä–∞–≤–∏–≤: <code>0</code>",
            disable_web_page_preview=True
        )

# –ü—Ä–∏–Ω—è—Ç–∏–µ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ ID –¥–ª—è Yoo
@dp.message_handler(IsAdminorShopAdmin(), state="here_yoo_client_id")
async def payment_qiwi_edit_token(message: Message, state: FSMContext):
    await state.update_data(here_yoo_client_id=message.text)
    user_id = message.from_user.id
    lang = get_userx(user_id=user_id)['user_lang']

    await state.set_state("here_yoo_redirect_url")
    if lang == "ru":
        await message.answer(
            "<b>ü•ù –í–≤–µ–¥–∏—Ç–µ <code>Redirect URL üñç</code></b>\n"
            "‚ùï –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ –≤ —Ä–∞–∑–¥–µ–ª–µ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ YooMoney –ø–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ üëâ <a href='https://yoomoney.ru'><b>–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è</b></a>\n"
            "‚ùï –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –ø–æ –§–æ—Ä–º–µ, –æ—Ç–ø—Ä–∞–≤–∏–≤: <code>0</code>",
            disable_web_page_preview=True
        )
    if lang == "en":
        await message.answer(
            "<b>ü•ù Please enter <code>Redirect URL üñç</code></b>\n"
            "‚ùï You can get it in the Settings section of YooMoney after authentication üëâ <a href='https://yoomoney.ru'><b>Click Me</b></a>\n"
            "‚ùï You can skip adding payment by Form by sending: <code>0</code>",
            disable_web_page_preview=True
        )


# –ü—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è QIWI
@dp.message_handler(IsAdminorShopAdmin(), state="here_qiwi_secret")
async def payment_qiwi_edit_secret(message: Message, state: FSMContext):
    async with state.proxy() as data:
        qiwi_login = data['here_qiwi_login']
        qiwi_token = data['here_qiwi_token']
        if message.text == "0": qiwi_secret = "None"
        if message.text != "0": qiwi_secret = message.text
        user_id = message.from_user.id
        lang = get_userx(user_id=user_id)['user_lang']

    await state.finish()
    if lang == "ru":
        cache_message = await message.answer("<b>ü•ù –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö QIWI –¥–∞–Ω–Ω—ã—Ö... üîÑ</b>")
    if lang == "en":
        cache_message = await message.answer("<b>ü•ù Checking the entered QIWI data... üîÑ</b>")

    await asyncio.sleep(0.5)

    await (await QiwiAPI(cache_message, qiwi_login, qiwi_token, qiwi_secret, add_pass=True, suser_id=user_id)).pre_checker()


# –ü—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è Yoo
@dp.message_handler(IsAdminorShopAdmin(), state="here_yoo_redirect_url")
async def payment_qiwi_edit_secret(message: Message, state: FSMContext):
    async with state.proxy() as data:
        acc_number = data['here_yoo_acc_number']
        token = data['here_yoo_token']
        client_id = data['here_yoo_client_id']
        user_id = message.from_user.id
        lang = get_userx(user_id=user_id)['user_lang']

        if message.text == "0": redirect_url = "None"
        if message.text != "0": redirect_url = message.text

        print(acc_number, token, client_id, redirect_url)

    await state.finish()

    if lang == "ru":
        cache_message = await message.answer("<b>ü•ù –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö Yoo –¥–∞–Ω–Ω—ã—Ö... üîÑ</b>")
    if lang == "en":
        cache_message = await message.answer("<b>ü•ù Checking the entered Yoo data... üîÑ</b>")
    await asyncio.sleep(0.5)
    #await update_paymentx()
    await (await YooAPI(user_id, acc_number, token, client_id, redirect_url)).update_yoo()
    await message.answer(
        "<b>–î–∞–Ω–Ω—ã–µ YooMoney —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!</b>\n",
         disable_web_page_preview=True
    )

